<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAQABAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACWAJYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD81Zo8xsMdqx2GGNb7DIIwKxJ02yH616MCEPuG3xxn2qmOJh9a
        snmIVDtAOe9aD2NiNcoKaYxk+tSWpzCppWHzGsGCI9uO1T2ioJgWHOajxxUmdjq3pzRuUa6xLHMGHBNW
        vtsEXDSLke9c9cSzyyEhsL2rMlaRiSzdKahcix3EXiaztm5fP0q6njDTsgGT9K8xJoB5q/ZolxTPR/FV
        1Fd6IZIWDKSOlcFbL/pCD3qS0unMZgaQiM9jW7onhiTU7hAkgBHzYI7UJcq1GvdR6Polp/xL4uP4RU7W
        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
        gZVQYGM4ooopsg//2Q==
</value>
  </data>
  <metadata name="erp_dob_date.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="erp_marry_date.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>147, 17</value>
  </metadata>
  <metadata name="erp_wsd_date_of_post_date.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>282, 17</value>
  </metadata>
</root>